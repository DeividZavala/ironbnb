{"version":3,"sources":["Components/Navbar/index.js","services/variables.js","services/authServices.js","AppContext.js","Components/AuthForm/index.js","Components/Common/Slider/index.js","Components/Common/InputField/index.js","services/reservationServices.js","Components/Common/ReservationModal/index.js","Components/Common/PropertyCard/index.js","services/propertyServices.js","Components/Home/index.js","Components/Common/TextAreaField/index.js","Components/PropertyForm/Form.js","Components/PropertyForm/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","user","logout","className","uk-navbar","_id","to","uk-grid","width","height","alt","name","src","profile_picture","onClick","base_url","axios","defaults","withCredentials","login","credential","post","signup","AppContext","createContext","AuthForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","isLogin","props","location","pathname","setUser","context","credentials","action","history","nextRoute","then","res","data","localStorage","setItem","JSON","stringify","push","catch","err","UIkit","notification","message","response","msg","status","pos","this","onSubmit","htmlFor","uk-icon","onChange","id","type","required","Component","contextType","Slider","images","uk-slideshow","map","image","index","key","uk-cover","href","uk-slidenav-previous","uk-slideshow-item","uk-slidenav-next","InputField","placeholder","createReservation","reservation","ReservationModal","property","console","log","title","uk-modal","min","dayjs","extend","relativeTime","PropertyCard","description","price","capacity","createdAt","owner","userId","isDemo","isOwner","locale","fromNow","disabled","uk-toggle","createProperty","Home","properties","length","get","result","setProperties","TextAreaField","hint","cols","rows","Form","handleImagesChange","descriptionLength","PropertyForm","split","addProperty","Object","values","errors","error","Routes","exact","path","component","App","parse","getItem","removeItem","Provider","AppWithRouter","withRouter","Boolean","window","hostname","match","use","Icons","WithRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ff8b047.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = ({ user, logout }) => {\n  return (\n    <header>\n      <nav className=\"uk-navbar-container\" uk-navbar=\"true\">\n        {user._id ? (\n          <div className=\"uk-navbar-left\">\n            <ul className=\"uk-navbar-nav\">\n              <li className=\"uk-active\">\n                <Link to=\"/\">Ironbnb</Link>\n              </li>\n\n              <li>\n                <Link to=\"/property/new\">New Property</Link>\n              </li>\n            </ul>\n          </div>\n        ) : null}\n        <div className=\"uk-navbar-right\">\n          <ul className=\"uk-navbar-nav\">\n            {user._id ? (\n              <li>\n                <Link to=\"/profile\">\n                  <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\n                    <div className=\"uk-width-auto\">\n                      <img\n                        className=\"uk-border-circle\"\n                        width=\"40\"\n                        height=\"40\"\n                        alt={user.name}\n                        src={user.profile_picture}\n                      />\n                    </div>\n                    <div className=\"uk-width-expand\">\n                      <div className=\"uk-margin-remove-bottom\">{user.name}</div>\n                    </div>\n                  </div>\n                </Link>\n                <div className=\"uk-navbar-dropdown\">\n                  <ul className=\"uk-nav uk-navbar-dropdown-nav\">\n                    <li onClick={logout}>Logout</li>\n                  </ul>\n                </div>\n              </li>\n            ) : (\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            )}\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","export const isProd = process.env.NODE_ENV === \"production\";\nexport const base_url = isProd\n  ? \"https://ih-m2.herokuapp.com/api\"\n  : \"http://localhost:3000/api\";\n","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const login = (credential) => {\n  return axios.post(`${base_url}/users/login`, credential);\n};\n\nexport const signup = (credential) => {\n  return axios.post(`${base_url}/users/signup`, credential);\n};\n\nexport const logout = () => {\n  return axios.post(`${base_url}/users/logout`);\n};\n","import { createContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { login, signup } from \"../../services/authServices\";\nimport UIkit from \"uikit\";\nimport AppContext from \"../../AppContext\";\n\nclass AuthForm extends Component {\n  static contextType = AppContext;\n  state = {\n    user: {},\n  };\n\n  handleChange = (e) => {\n    let { user } = this.state;\n    user = { ...user, [e.target.name]: e.target.value };\n    this.setState({ user });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const isLogin = this.props.location.pathname === \"/login\";\n    const { setUser } = this.context;\n    const { user: credentials } = this.state;\n    const action = isLogin ? login : signup;\n    const { history } = this.props;\n    const nextRoute = isLogin ? \"/\" : \"/login\";\n    action(credentials)\n      .then((res) => {\n        if (isLogin) {\n          const { user } = res.data;\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          setUser(user);\n        }\n        history.push(nextRoute);\n      })\n      .catch((err) => {\n        UIkit.notification({\n          message: `<span uk-icon='icon: close'></span> ${err.response.data.msg}`,\n          status: \"danger\",\n          pos: \"top-right\",\n        });\n      });\n  };\n\n  render() {\n    const isLogin = this.props.location.pathname === \"/login\";\n    return (\n      <section className=\"uk-section\">\n        <div className=\"uk-container uk-flex uk-flex-center\">\n          <div className=\"uk-width-1-4\">\n            <h3>{isLogin ? \"Login\" : \"Signup\"}</h3>\n            <form\n              onSubmit={this.handleSubmit}\n              className=\"uk-width-1-1 uk-form-stacked uk-flex uk-flex-center uk-flex-column\"\n            >\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\" htmlFor=\"email\">\n                  Email:\n                </label>\n                <div className=\"uk-inline\">\n                  <span\n                    className=\"uk-form-icon uk-form-icon-flip\"\n                    uk-icon=\"icon: mail\"\n                  ></span>\n                  <input\n                    onChange={this.handleChange}\n                    id=\"email\"\n                    name=\"email\"\n                    className=\"uk-input\"\n                    type=\"email\"\n                    required\n                  />\n                </div>\n                <div className=\"uk-margin\">\n                  <label className=\"uk-form-label\" htmlFor=\"password\">\n                    Password:\n                  </label>\n                  <div className=\"uk-inline\">\n                    <span\n                      className=\"uk-form-icon uk-form-icon-flip\"\n                      uk-icon=\"icon: lock\"\n                    ></span>\n                    <input\n                      onChange={this.handleChange}\n                      id=\"password\"\n                      name=\"password\"\n                      className=\"uk-input\"\n                      type=\"password\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n              {isLogin ? (\n                <div className=\"uk-text-meta\">\n                  Aún no tienes cuenta?{\" \"}\n                  <Link className=\"uk-text-primary\" to=\"/signup\">\n                    Crear cuenta\n                  </Link>\n                </div>\n              ) : null}\n              <button className=\"uk-button uk-button-primary\">\n                {isLogin ? \"Login\" : \"Signup\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default AuthForm;\n","import React from \"react\";\n\nconst Slider = ({ images }) => (\n  <div\n    className=\"uk-position-relative uk-visible-toggle uk-light\"\n    uk-slideshow=\"animation: fade;ratio: 2:2;max-height: 500\"\n  >\n    <ul className=\"uk-slideshow-items\">\n      {images.map((image, index) => (\n        <li key={index}>\n          <img src={image} alt=\"\" uk-cover=\"true\" />\n        </li>\n      ))}\n    </ul>\n\n    <a\n      className=\"uk-position-center-left uk-position-small uk-hidden-hover\"\n      href=\"#\"\n      uk-slidenav-previous=\"true\"\n      uk-slideshow-item=\"previous\"\n    ></a>\n    <a\n      className=\"uk-position-center-right uk-position-small uk-hidden-hover\"\n      href=\"#\"\n      uk-slidenav-next=\"true\"\n      uk-slideshow-item=\"next\"\n    ></a>\n\n    <div className=\"uk-position-bottom-center uk-position-small\">\n      <ul className=\"uk-dotnav\">\n        {images.map((image, index) => (\n          <li key={index} uk-slideshow-item={index}>\n            <a href=\"#\">Item 1</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nexport default Slider;\n","import React from \"react\";\n\nconst InputField = ({\n  name,\n  type = \"text\",\n  handleChange,\n  placeholder,\n  ...props\n}) => (\n  <div className=\"uk-margin\">\n    <label className=\"uk-form-label uk-text-capitalize\" htmlFor={name}>\n      {name}:\n    </label>\n    <div className=\"uk-form-controls\">\n      <input\n        onChange={handleChange}\n        name={name}\n        className=\"uk-input\"\n        id={name}\n        type={type}\n        placeholder={placeholder}\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nexport default InputField;\n","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const createReservation = (reservation) => {\n  return axios.post(`${base_url}/reservations`, reservation);\n};\n","import React, { Component } from \"react\";\nimport InputField from \"../InputField\";\nimport { createReservation } from \"../../../services/reservationServices\";\n\nclass ReservationModal extends Component {\n  state = {\n    reservation: {},\n  };\n\n  handleChange = (e) => {\n    let { reservation } = this.state;\n    reservation = { ...reservation, [e.target.name]: e.target.value };\n    this.setState({ reservation });\n  };\n\n  handleSubmit = () => {\n    const { reservation } = this.state;\n    const { property } = this.props;\n    createReservation({ ...reservation, property }).then((res) => {\n      //const {}\n      console.log(res.data);\n    });\n  };\n\n  render() {\n    const { title, property } = this.props;\n    return (\n      <div id={`reservate-${property}`} uk-modal=\"true\">\n        <div className=\"uk-modal-dialog uk-modal-body\">\n          <h2 className=\"uk-modal-title\">Reservate {title}</h2>\n          <form>\n            <InputField\n              name=\"guest_number\"\n              type=\"number\"\n              min=\"1\"\n              handleChange={this.handleChange}\n              placeholder=\"Guest number\"\n            />\n            <InputField\n              name=\"checkin\"\n              handleChange={this.handleChange}\n              type=\"date\"\n              placeholder=\"Checkin Date\"\n            />\n            <InputField\n              name=\"checkout\"\n              type=\"date\"\n              handleChange={this.handleChange}\n              placeholder=\"Checkout Date\"\n            />\n          </form>\n          <p className=\"uk-text-right\">\n            <button\n              className=\"uk-button uk-button-default uk-modal-close\"\n              type=\"button\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={this.handleSubmit}\n              className=\"uk-button uk-button-primary\"\n              type=\"button\"\n            >\n              Save\n            </button>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReservationModal;\n","import React from \"react\";\nimport Slider from \"../Slider\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { Link } from \"react-router-dom\";\nimport ReservationModal from \"../ReservationModal\";\nimport \"dayjs/locale/es\";\ndayjs.extend(relativeTime);\n\nconst PropertyCard = ({\n  _id,\n  images = [],\n  title,\n  description,\n  price,\n  capacity,\n  createdAt,\n  owner,\n  userId,\n  isDemo = false,\n}) => {\n  const isOwner = userId === owner?._id;\n  return (\n    <div className=\"uk-margin-small-bottom\">\n      <ReservationModal title={title} property={_id} />\n      <div className=\"uk-card uk-card-default\">\n        {!isDemo ? (\n          <div className=\"uk-card-header uk-padding-small\">\n            <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\n              <div className=\"uk-width-auto\">\n                <img\n                  className=\"uk-border-circle\"\n                  width=\"40\"\n                  height=\"40\"\n                  alt={owner?.name}\n                  src={owner?.profile_picture}\n                />\n              </div>\n              <div className=\"uk-width-expand\">\n                <h3 className=\"uk-card-title uk-margin-remove-bottom\">\n                  {owner?.name}\n                </h3>\n                <p className=\"uk-text-meta uk-margin-remove-top\">Propietario</p>\n              </div>\n              {isOwner ? (\n                <div>\n                  <Link\n                    to={`/property/${_id}`}\n                    className=\"uk-button uk-button-text\"\n                  >\n                    Editar\n                  </Link>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ) : null}\n        <div className=\"uk-card-media-top\">\n          <Slider images={images} />\n        </div>\n        <div className=\"uk-card-body uk-padding-small\">\n          <h3 className=\"uk-card-title uk-text-center\">\n            <Link\n              to={`/property/${_id}`}\n              className=\"uk-button uk-button-text uk-text-lead\"\n            >\n              {title}\n            </Link>\n          </h3>\n          <div>Precio por noche: {price}</div>\n          <div>Capacidad: {capacity} personas</div>\n          <div>Creada {dayjs(createdAt).locale(\"es\").fromNow()}</div>\n          <p>{description}</p>\n          <div className=\"uk-text-center\">\n            <button\n              disabled={isDemo}\n              className=\"uk-button uk-button-primary\"\n              uk-toggle={`target: #reservate-${_id}`}\n            >\n              Reservar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PropertyCard;\n","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const getProperties = () => {\n  return axios.get(`${base_url}/properties`);\n};\n\nexport const createProperty = (property) => {\n  return axios.post(`${base_url}/properties`, property);\n};\n","import React, { Component } from \"react\";\nimport PropertyCard from \"../Common/PropertyCard\";\nimport { getProperties } from \"../../services/propertyServices\";\nimport AppContext from \"../../AppContext\";\n\nclass Home extends Component {\n  static contextType = AppContext;\n  componentDidMount() {\n    const { properties } = this.context.state;\n    if (properties.length < 1) {\n      getProperties().then((res) => {\n        const { result } = res.data;\n        const { setProperties } = this.context;\n        setProperties(result);\n      });\n    }\n  }\n\n  render() {\n    const { properties, user } = this.context.state;\n    return (\n      <div className=\"uk-section\">\n        <div className=\"uk-container\">\n          <div className=\"uk-grid uk-grid-small uk-grid-match uk-child-width-1-3@l  uk-child-width-1-3@m uk-child-width-1-1@s\">\n            {properties.map((property, index) => (\n              <PropertyCard key={index} {...property} userId={user._id} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst TextAreaField = ({ name, handleChange, hint }) => (\n  <div className=\"uk-margin\">\n    <label className=\"uk-form-label uk-text-capitalize\" htmlFor={name}>\n      {name} {hint && `(${hint})`}:\n    </label>\n    <div className=\"uk-form-controls\">\n      <textarea\n        onChange={handleChange}\n        className=\"uk-textarea\"\n        name={name}\n        id={name}\n        cols=\"30\"\n        rows=\"5\"\n      ></textarea>\n    </div>\n  </div>\n);\n\nexport default TextAreaField;\n","import React from \"react\";\nimport InputField from \"../Common/InputField\";\nimport TextAreaField from \"../Common/TextAreaField\";\n\nconst Form = ({ handleSubmit, handleChange, handleImagesChange, property }) => {\n  const descriptionLength =\n    (property.description && property.description.length) || 0;\n  return (\n    <div>\n      <form className=\"uk-width-1-1\" onSubmit={handleSubmit}>\n        <InputField\n          name=\"title\"\n          placeholder=\"property name\"\n          handleChange={handleChange}\n        />\n        <InputField\n          name=\"price\"\n          placeholder=\"price per night\"\n          handleChange={handleChange}\n        />\n        <InputField\n          name=\"address\"\n          placeholder=\"property address\"\n          handleChange={handleChange}\n        />\n        <InputField\n          name=\"capacity\"\n          placeholder=\"property capacity\"\n          handleChange={handleChange}\n        />\n        <TextAreaField\n          name=\"description\"\n          hint={`${descriptionLength}/50`}\n          handleChange={handleChange}\n        />\n        <TextAreaField\n          name=\"images\"\n          handleChange={handleImagesChange}\n          hint=\"separate multiple images by commas\"\n        />\n        <button type=\"submit\" className=\"uk-button uk-button-primary\">\n          Create property\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport { createProperty } from \"../../services/propertyServices\";\nimport AppContext from \"../../AppContext\";\nimport PropertyCard from \"../Common/PropertyCard\";\nimport Form from \"./Form\";\nimport UIkit from \"uikit\";\n\nclass PropertyForm extends Component {\n  static contextType = AppContext;\n  state = {\n    property: {},\n  };\n  handleChange = (e) => {\n    let { property } = this.state;\n    property = { ...property, [e.target.name]: e.target.value };\n    this.setState({ property });\n  };\n  handleImagesChange = (e) => {\n    let { property } = this.state;\n    property = { ...property, [e.target.name]: e.target.value.split(\",\") };\n    this.setState({ property });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { property } = this.state;\n    const { addProperty } = this.context;\n    const { history } = this.props;\n    createProperty(property)\n      .then((res) => {\n        const { result } = res.data;\n        addProperty(result);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        const errors = Object.values(err.response.data.errors);\n        errors.map((error) =>\n          UIkit.notification({\n            message: `<span uk-icon='icon: close'></span> ${error.message}`,\n            status: \"danger\",\n            pos: \"top-right\",\n          })\n        );\n      });\n  };\n  render() {\n    const { property } = this.state;\n    return (\n      <section className=\"uk-section\">\n        <div className=\"uk-container\">\n          <h3>Create property</h3>\n          <div className=\"uk-grid uk-child-width-1-2\">\n            <Form\n              property={property}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n              handleImagesChange={this.handleImagesChange}\n            />\n            <div>\n              <PropertyCard {...property} isDemo={true} />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PropertyForm;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AuthForm from \"./Components/AuthForm\";\nimport Home from \"./Components/Home\";\nimport PropertyForm from \"./Components/PropertyForm\";\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/login\" component={AuthForm} />\n    <Route exact path=\"/signup\" component={AuthForm} />\n    <Route exact path=\"/property/new\" component={PropertyForm} />\n    <Route exact path=\"/property/:id\" component={() => <h1>detailt</h1>} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Component } from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport AppContext from \"./AppContext\";\nimport { withRouter } from \"react-router\";\nimport { logout } from \"./services/authServices\";\n\nclass App extends Component {\n  state = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n    properties: [],\n  };\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  setProperties = (properties) => {\n    this.setState({ properties });\n  };\n\n  addProperty = (property) => {\n    let { properties } = this.state;\n    properties = { property, ...properties };\n    this.setState({ properties });\n  };\n\n  logout = () => {\n    const { history } = this.props;\n    logout().then(() => {\n      localStorage.removeItem(\"user\");\n      this.setState({ user: {} });\n      history.push(\"/login\");\n    });\n  };\n\n  render() {\n    const { state, setUser, logout, setProperties, addProperty } = this;\n    return (\n      <AppContext.Provider\n        value={{ state, setUser, logout, setProperties, addProperty }}\n      >\n        <div className=\"App\">\n          <Navbar user={state.user} logout={logout} />\n          <Routes />\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nconst AppWithRouter = withRouter(App);\n\nexport default AppWithRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport UIkit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"uikit/dist/css/uikit.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nUIkit.use(Icons);\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(<WithRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}